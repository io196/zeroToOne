#include <stdio.h>
#include <math.h>

//int main()
//{
//	int daima = 0;
//	while (daima < 2000)
//	{
//		daima++;
//		printf("%d 继续敲代码\n",daima);
//	}
//	if (daima >= 2000)
//		printf("修成正果\n");
//	return 0;
//}
//
//int main()
//{
//	int arr[10] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
//	int i = 0;
//	while (i < 10)
//	{
//		printf("%d\n",arr[i]);
//		i++;
//	}
//	return 0;
//}
//

//int main()
//{
//	int i = 0;
//	int j = 0;
//	int k = 0;
//	for (i = 1; i < 10; i++)
//	{
//		for (j = 1; j <= i; j++)
//		{
//			k = i*j;
//			printf("%d * %d = %d  ", j, i, k);
//			if (j == i)
//				printf("\n");
//		}
//	}
//	return 0;
//}

//1. 实现一个函数，打印乘法口诀表，口诀表的行数和列数自己指定
//如：输入9，输出9 * 9口诀表，输出12，输出12 * 12的乘法口诀表。
//int main()
//{
//	int i = 0;
//	int j = 0;
//	int k = 0;
//	printf("请输入行数或列数  \n");
//	scanf_s("%d", &k);
//	printf("%d*%d乘法口诀表\n",k,k);
//	for (i = 1; i <= k; i++)
//	{
//		for (j = 1; j <= i; j++)
//		{
//			printf("%d*%d=%2d  ", j, i, i*j);
//			if (i == j)
//				printf("\n");
//		}
//	}
//	return 0;
//}
//
//2. 给定两个整形变量的值，将两个值的内容进行交换。
////
//int main()
//{
//	int a = 9;
//	int b = 2;
//	int c = 0;
//	c = a;
//	a = b;
//	b = c;
//	printf("a=%d b=%d\n", a, b);
//	return 0;
//}

//3. 实现一个函数来交换两个整数的内容。
//错误//
//void Swap(int x, int y)
//{
//	//x,y 形参
//	int z = 0;
//	z = x;
//	x = y;
//	y = z;
//}
//int main()
//{
//	int a = 50, b = 25;
//	Swap(&a, &b);
//	//a,b 实参
//	//当实参传递给形参的时候，形参其实是实参的一份临时拷贝
//	//对于形参的修改不会影响实参
//	printf("a=%d b=%d\n", a, b);
//	return 0;
//}
//
//void Swap(int *pa, int *pb)
//{
//	int z = 0;
//	z = *pa;
//	*pa = *pb;
//	*pb = z;
//}
//int main()
//{
//	int a = 50, b = 25;
//	Swap(&a, &b);
//	printf("a=%d b=%d\n", a, b);
//	return 0;
//}


//4. 实现函数判断year是不是润年。
//要求：利用上面实现的函数打印1000到2000年的闰年。
////
//int is_leap_year(int y)
//{
//	if ((y % 4 == 0) && (y % 100 != 0) || (y % 400 == 0))
//		return 1;
//	else
//		return 0;
//}
//int main()
//{
//	int year = 0;
//	for (year = 1000; year <= 2000; year++)
//	{
//		if (is_leap_year(year) == 1)
//		{
//			printf("%d ", year);
//		}
//	}
//	return 0;
//}
//

//5. 实现一个函数，判断一个数是不是素数。
//要求：利用上面实现的函数打印100到200之间的素数。
//
//int is_prime(int x)
//{
//	int i = 0;
//	for (i = 2; i < x; i++)
//	{
//		if (x%i == 0)
//			return 0;
//	}
//			return 1;
//}
//int main()
//{
//	int p = 0;
//	for (p = 100; p <= 200; p++)
//	{
//		if ((is_prime(p)) == 1)
//		{
//			printf("%d ", p);
//		}
//	}
//	return 0;
//}
