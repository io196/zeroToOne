#include<stdio.h>
//1. 不允许创建临时变量，交换两个整数的内容
//
//int main()
//{
//	int a = 5;
//	int b = 3;
//	printf("a=%d  b=%d \n", a, b);
//	a = a^b;
//	b = a^b;
//	a = a^b;
//	printf("a=%d  b=%d \n", a, b);
//	return 0;
//}


//2. 写一个函数返回参数二进制中 1 的个数
//例如： 15    0000 1111    4 个 1
//程序原型：
//int count_one_bits(unsigned int value)
//{
//	// 返回 1的位数
//}
//
//①
//int count_one_bits(unsigned int n)
//{
//	int count = 0;
//	while (n)
//	{
//		if (n % 2 == 1)
//			count++;
//		n = n / 2;
//	}
//	return count;
//}
//②
//int count_one_bits(int n)
//{
//	int count = 0;
//	int i = 0;
//	for (i = 0; i < 32; i++)
//	{
//		if (((n >> i) & 1) == 1)
//			count++;
//	}
//	return count;
//}
//
//int count_one_bits(n)
//{
//	int count = 0;
//	while (n)
//	{
//		count++;
//		n = n&(n - 1);
//	}
//	return count;
//}
//int main()
//{
//	int a = -1;
//	int ret = count_one_bits(a);
//	printf("ret=%d \n", ret);
//	return 0;
//}

//3. 获取一个整数二进制序列中所有的偶数位和奇数位。
//要求：分别打印出二进制序列。
////
//int main()
//{
//	int a = 98;
//	int i = 0;
//	for (i = 30; i >= 0; i -= 2)
//	{
//		printf("%d", (a >> i) & 1);
//	}
//	printf("\n");
//	for (i = 31; i >= 1; i -= 2)
//	{
//		printf("%d", (a >> i) & 1);
//	}
//	printf("\n");
//	return 0;
//}
//4
//两个int（32位）整数m和n的二进制表达中，有多少个位(bit)不同？
//输入例子 :
//1999 2299
//输出例子 : 7
//int count_one_bit(int a)
//{
//	int count = 0;
//	while (a)
//	{
//		a = a&(a - 1);
//		count++;
//	}
//	return count;
//}
//int main()
//{
//	int m = 1999;
//	int n = 2299;
//	int tmp = m^n;
//	int count = count_one_bit(tmp);
//	printf("%d ", count);
//	return 0;
//}
//
//
